name: Java CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  security-events: write

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run Checkstyle
        run: mvn checkstyle:check || echo "Checkstyle warnings found - continuing"
        continue-on-error: true

      - name: Run SpotBugs
        run: mvn compile && mvn com.github.spotbugs:spotbugs-maven-plugin:check || echo "SpotBugs warnings found - continuing"
        continue-on-error: true

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: lint
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: videogames
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn -B clean package

      - name: Run tests
        run: mvn test -Dspring.profiles.active=ci
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/videogames
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres

      - name: Upload JAR and test reports
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            target/*.jar
            target/surefire-reports/

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build
    if: false  # Temporarily disabled
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
        continue-on-error: true

      - name: Analyze with CodeQL
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs: [build, security]
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Release ${{ github.run_number }}"
          body: "Automated CI/CD release for siw_videogames project"
          files: build/target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}